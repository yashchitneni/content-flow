# ContentFlow - Product Requirements Document

## Executive Summary
ContentFlow is a macOS desktop application that automates the content creation workflow from video file ingestion through transcript processing to social media content generation. Built with Tauri (Rust + React), it integrates with external services for transcription and uses AI for content generation.

## Core Features

### 1. File Management & Import (FR-001 to FR-010)
- Drag-and-drop video file import (.mp4, .mov, .avi, .mkv)
- Visual feedback and validation
- File browser integration
- Progress tracking for batch imports
- Import history and status tracking

### 2. Video Organization & Analysis (FR-011 to FR-020)
- FFmpeg integration for video metadata extraction
- Automatic categorization by orientation (16:9, 9:16, 1:1)
- Content type estimation based on duration and audio
- Smart folder organization: ~/ContentFlow/[YYYY]/[MM]/[Orientation]/
- Real-time analysis progress tracking

### 3. External Integration (FR-021 to FR-030)
- OAuth 2.0 authentication flow
- Batch upload functionality
- Manual export workflow support
- File monitoring and auto-import
- Error handling and retry logic

### 4. Transcript Library (FR-031 to FR-040)
- Full-text search with SQLite FTS5
- Tag extraction and content analysis
- Advanced filtering and sorting
- Content potential scoring
- Multi-selection for batch operations

### 5. Content Generation Studio (FR-041 to FR-050)
- LangGraph-powered AI content generation
- Multiple platform templates (Instagram, Twitter, LinkedIn, YouTube)
- Real-time constraint validation
- Auto-save and version history
- Template-specific editing tools

### 6. Export & Settings (FR-051 to FR-060)
- Multi-format export (PNG, text, ZIP)
- Clipboard integration with platform formatting
- API key management and validation
- Brand settings and preferences
- Usage statistics and quotas

## Technical Requirements
- **Platform**: macOS only
- **Architecture**: Tauri v2 (Rust backend + React frontend)
- **Database**: SQLite with FTS5 for search
- **AI Framework**: LangGraph for content workflows
- **Video Processing**: FFmpeg integration
- **UI Framework**: React + TypeScript + Tailwind CSS
- **Design System**: Atomic design principles

## Performance Targets
- Video analysis: <2s per file
- Search response: <200ms
- Content generation: <30s
- File import: Real-time progress feedback
- UI responsiveness: 60fps interactions

## User Experience Goals
- Intuitive drag-and-drop workflow
- Clear progress feedback for all operations
- Comprehensive error handling with helpful messages
- Consistent visual design following atomic design system
- Efficient keyboard shortcuts and batch operations

## Integration Requirements
- External API integration capabilities
- Secure credential storage with encryption
- File system monitoring and organization
- Cross-platform file format support
- Extensible plugin architecture for future integrations

## Success Metrics
- <5 minutes from video import to organized content
- 90%+ successful file processing rate
- <3 clicks to generate content from transcript
- Zero data loss during file operations
- Intuitive onboarding flow completion rate >80%
EOF < /dev/null